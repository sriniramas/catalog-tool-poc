{"version":3,"file":"icon.component.js","sourceRoot":"","sources":["../src/icon/icon.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACN,SAAS,EACT,UAAU,EAEV,KAAK,EAIL,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAI7C;;;;;;GAMG;AACH;IA8BC;;;;OAIG;IACH,cAAsB,UAAsB,EAAY,WAAwB;QAA1D,eAAU,GAAV,UAAU,CAAY;QAAY,gBAAW,GAAX,WAAW,CAAa;QA3BhF,4BAA4B;QACnB,UAAK,GAAwC,MAAM,CAAC;QAC7D,uCAAuC;QAC9B,SAAI,GAA8B,IAAI,CAAC;QAEhD,yCAAyC;QAC/B,YAAO,GAAY;YAC5B,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;SACR,CAAC;QASQ,8BAAyB,GAAiB,IAAI,CAAC;IAO0B,CAAC;IAXpF,sBAAI,2BAAS;QAHb;;WAEG;aACH;YACC,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC;QAChD,CAAC;;;OAAA;IAWD,8BAAe,GAAf;QAAA,iBAaC;QAZA,IAAM,IAAI,GAAgB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QACxD,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACjF,WAAW,CAAC,IAAI,CAAC,UAAA,IAAI;YACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;YAC5C,IAAI,KAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;gBACrC,KAAwB,UAAc,EAAd,KAAA,KAAI,CAAC,SAAS,EAAd,cAAc,EAAd,IAAc,EAAE;oBAAnC,IAAM,SAAS,SAAA;oBACnB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;iBAC9B;aACD;YACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACI,+BAAgB,GAAvB;QACC,IAAI,IAAI,CAAC,KAAK,KAAK,MAAM,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;YAChD,OAAO,WAAS,IAAI,CAAC,IAAM,CAAC;SAC5B;aAAM;YACN,OAAO,UAAO,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC,OAAK,IAAI,CAAC,KAAO,CAAC,CAAC,CAAC,EAAE,KAAG,IAAI,CAAC,KAAK,KAAK,MAAM,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,MAAI,IAAI,CAAC,IAAM,CAAC,CAAC,CAAC,EAAE,CAAE,CAAC;SACpI;IACF,CAAC;;gBA7DD,SAAS,SAAC;oBACV,QAAQ,EAAE,UAAU;oBACpB,QAAQ,EAAE,EAAE;oBACZ,SAAS,EAAE,CAAC,WAAW,CAAC;iBACxB;;;;gBAtBA,UAAU;gBAOF,WAAW;;;uBAkBlB,KAAK;wBAEL,KAAK;uBAEL,KAAK;;IAmDP,WAAC;CAAA,AA9DD,IA8DC;SAzDY,IAAI","sourcesContent":["import {\n\tComponent,\n\tElementRef,\n\tHostBinding,\n\tInput,\n\tOnChanges,\n\tOnInit,\n\tAfterViewInit\n} from \"@angular/core\";\nimport { IconService } from \"./icon.service\";\nimport { Subscription } from \"rxjs\";\nimport { SizeMap } from \"./icon.types\";\n\n/**\n * `n-icon` pulls the icon from the loaded sprite, and renders it at the specified size.\n * Under the hood, `n-icon` generates code similar to the following:\n * ```\n * <svg class=\"icon\" width=\"30\" height=\"30\"><use href=\"#alert_30\"></use></svg>\n * ```\n */\n@Component({\n\tselector: \"ibm-icon\",\n\ttemplate: \"\",\n\tproviders: [IconService]\n})\nexport class Icon implements AfterViewInit {\n\t/** follows the naming convention found in the icon listing on the demo page */\n\t@Input() icon: string;\n\t/** accepts color strings */\n\t@Input() color: \"blue\" | \"light\" | \"dark\" | \"white\" = \"dark\";\n\t/** accepts abbreviated size strings */\n\t@Input() size: \"xs\" | \"sm\" | \"md\" | \"lg\" = \"md\";\n\n\t/** map size strings to numeric values */\n\tprotected sizeMap: SizeMap = {\n\t\t\"xs\": 14,\n\t\t\"sm\": 16,\n\t\t\"md\": 20,\n\t\t\"lg\": 30\n\t};\n\n\t/**\n\t * Pass down `classList` from host element.\n\t */\n\tget classList(): any {\n\t\treturn this.elementRef.nativeElement.classList;\n\t}\n\n\tprotected spriteLoadingSubscription: Subscription = null;\n\n\t/**\n\t * Initialize the component\n\t *\n\t * @param {ElementRef} elementRef\n\t */\n\tconstructor(protected elementRef: ElementRef, protected iconService: IconService) {}\n\n\tngAfterViewInit() {\n\t\tconst root: HTMLElement = this.elementRef.nativeElement;\n\t\tconst iconPromise = this.iconService.getIcon(this.icon, this.sizeMap[this.size]);\n\t\ticonPromise.then(icon => {\n\t\t\troot.innerHTML = \"\";\n\t\t\ticon.classList.add(this.buildMatterClass());\n\t\t\tif (this.classList.toString() !== \"\") {\n\t\t\t\tfor (const className of this.classList) {\n\t\t\t\t\ticon.classList.add(className);\n\t\t\t\t}\n\t\t\t}\n\t\t\troot.appendChild(icon);\n\t\t});\n\t}\n\n\t/**\n\t * Create a class name based on @Input() `color` and `size`.\n\t */\n\tpublic buildMatterClass(): string {\n\t\tif (this.color === \"dark\" && this.size !== \"md\") {\n\t\t\treturn `icon--${this.size}`;\n\t\t} else {\n\t\t\treturn `icon${this.color !== \"dark\" ? `--${this.color}` : \"\"}${this.color !== \"dark\" && this.size !== \"md\" ? `-${this.size}` : \"\"}`;\n\t\t}\n\t}\n}\n"]}