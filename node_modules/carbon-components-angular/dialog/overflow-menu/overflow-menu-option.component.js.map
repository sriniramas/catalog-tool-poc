{"version":3,"file":"overflow-menu-option.component.js","sourceRoot":"","sources":["../../src/dialog/overflow-menu/overflow-menu-option.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACN,WAAW,EACX,SAAS,EACT,KAAK,EACL,UAAU,EACV,MAAM,EACN,YAAY,EACZ,MAAM,eAAe,CAAC;AAEvB;;;;;;;;;;;GAWG;AACH;IA0CC,4BAAsB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAzBtB,gBAAW,GAAG,mCAAmC,CAAC;QAC9C,SAAI,GAAG,cAAc,CAAC;QAWhD;;WAEG;QACM,SAAI,GAAwB,QAAQ,CAAC;QAC9C;;WAEG;QACM,aAAQ,GAAG,KAAK,CAAC;QAEhB,aAAQ,GAAsB,IAAI,YAAY,EAAE,CAAC;QAEpD,aAAQ,GAAG,CAAC,CAAC,CAAC;IAE0B,CAAC;IAtBhD,sBACW,wCAAQ;aADnB;YAEC,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC;QAC/B,CAAC;;;OAAA;IAED,sBACW,0CAAU;aADrB;YAEC,OAAO,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;;;OAAA;IAgBD,oCAAO,GAAP,UAAQ,KAAK;QACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAOD,sBAAI,4CAAY;QALhB;;;;WAIG;aACH;YACC,IAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACrE,IAAI,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,EAAE;gBAC5C,OAAO,IAAI,CAAC;aACZ;YACD,OAAO,KAAK,CAAC;QACd,CAAC;;;OAAA;IAKD,sBAAI,uCAAO;QAHX;;WAEG;aACH;YACC,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC;QAC1E,CAAC;;;OAAA;;gBAlED,SAAS,SAAC;oBACV,QAAQ,EAAE,0BAA0B;oBACpC,QAAQ,EAAE,+VAYT;iBACD;;;;gBAhCA,UAAU;;;8BAkCT,WAAW,SAAC,OAAO;uBACnB,WAAW,SAAC,WAAW;2BAEvB,WAAW,SAAC,iDAAiD;6BAK7D,WAAW,SAAC,mDAAmD;uBAO/D,KAAK;2BAIL,KAAK;2BAEL,MAAM;;IA6BR,yBAAC;CAAA,AAnED,IAmEC;SAnDY,kBAAkB","sourcesContent":["import {\n\tHostBinding,\n\tComponent,\n\tInput,\n\tElementRef,\n\tOutput,\n\tEventEmitter\n} from \"@angular/core\";\n\n/**\n * `OverflowMenuOption` represents a single option in an overflow menu\n *\n * Presently it has three possible states - normal, disabled, and danger:\n * ```\n * <ibm-overflow-menu-option>Simple option</ibm-overflow-menu-option>\n * <ibm-overflow-menu-option disabled=\"true\">Disabled</ibm-overflow-menu-option>\n * <ibm-overflow-menu-option type=\"danger\">Danger option</ibm-overflow-menu-option>\n * ```\n *\n * For content that expands beyod the overflow menu `OverflowMenuOption` automatically adds a title attribute.\n */\n@Component({\n\tselector: \"ibm-overflow-menu-option\",\n\ttemplate: `\n\t\t<button\n\t\t\tclass=\"bx--overflow-menu-options__btn\"\n\t\t\trole=\"menuitem\"\n\t\t\t[tabindex]=\"tabIndex\"\n\t\t\t(focus)=\"tabIndex = 0\"\n\t\t\t(blur)=\"tabIndex = -1\"\n\t\t\t(click)=\"onClick($event)\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[title]=\"(titleEnabled ? content : '')\">\n\t\t\t<ng-content></ng-content>\n\t\t</button>\n\t`\n})\nexport class OverflowMenuOption {\n\t@HostBinding(\"class\") optionClass = \"bx--overflow-menu-options__option\";\n\t@HostBinding(\"attr.role\") role = \"presentation\";\n\n\t@HostBinding(\"class.bx--overflow-menu-options__option--danger\")\n\tpublic get isDanger(): Boolean {\n\t\treturn this.type === \"danger\";\n\t}\n\n\t@HostBinding(\"class.bx--overflow-menu-options__option--disabled\")\n\tpublic get isDisabled(): Boolean {\n\t\treturn this.disabled;\n\t}\n\t/**\n\t * toggles between `normal` and `danger` states\n\t */\n\t@Input() type: \"normal\" | \"danger\" = \"normal\";\n\t/**\n\t * disable/enable interactions\n\t */\n\t@Input() disabled = false;\n\n\t@Output() selected: EventEmitter<any> = new EventEmitter();\n\n\tpublic tabIndex = -1;\n\n\tconstructor(protected elementRef: ElementRef) {}\n\n\tonClick(event) {\n\t\tthis.selected.emit();\n\t}\n\n\t/**\n\t * Returns true if the content string is longer than the width of the containing button\n\t *\n\t * note: getter ties into the view check cycle so we always get an accurate value\n\t */\n\tget titleEnabled() {\n\t\tconst button = this.elementRef.nativeElement.querySelector(\"button\");\n\t\tif (button.scrollWidth > button.offsetWidth) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the text content projected into the component\n\t */\n\tget content(): string {\n\t\treturn this.elementRef.nativeElement.querySelector(\"button\").textContent;\n\t}\n}\n"]}