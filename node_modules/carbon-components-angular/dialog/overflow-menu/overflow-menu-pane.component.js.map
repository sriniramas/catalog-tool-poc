{"version":3,"file":"overflow-menu-pane.component.js","sourceRoot":"","sources":["../../src/dialog/overflow-menu/overflow-menu-pane.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, HostListener, ElementRef, AfterViewInit } from \"@angular/core\";\nimport { Dialog } from \"../dialog.component\";\nimport { position } from \"../../utils/position\";\nimport { isFocusInLastItem, isFocusInFirstItem } from \"./../../common/tab.service\";\nimport { I18n } from \"./../../i18n/i18n.module\";\n\n/**\n * Extend the `Dialog` component to create an overflow menu.\n *\n * Not used directly. See overflow-menu.component and overflow-menu.directive for more\n */\n@Component({\n\tselector: \"ibm-overflow-menu-pane\",\n\ttemplate: `\n\t\t<ul\n\t\t\t[attr.aria-label]=\"dialogConfig.menuLabel\"\n\t\t\t[ngClass]=\"{'bx--overflow-menu--flip': dialogConfig.flip}\"\n\t\t\trole=\"menu\"\n\t\t\t#dialog\n\t\t\tclass=\"bx--overflow-menu-options bx--overflow-menu-options--open\"\n\t\t\trole=\"menu\"\n\t\t\t(click)=\"doClose()\"\n\t\t\t[attr.aria-label]=\"dialogConfig.menuLabel\">\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"dialogConfig.content\"\n\t\t\t\t[ngTemplateOutletContext]=\"{overflowMenu: this}\">\n\t\t\t</ng-template>\n\t\t</ul>\n\t`\n})\nexport class OverflowMenuPane extends Dialog implements AfterViewInit {\n\n\tconstructor(protected elementRef: ElementRef, protected i18n: I18n) {\n\t\tsuper(elementRef);\n\t}\n\n\tonDialogInit() {\n\t\t/**\n\t\t *  60 shifts the menu right to align the arrow.\n\t\t * (position service trys it's best to center everything,\n\t\t * so we need to add some compensation)\n\t\t */\n\t\tthis.addGap[\"bottom\"] = pos => {\n\t\t\tif (this.dialogConfig.flip) {\n\t\t\t\treturn position.addOffset(pos, 0, -60);\n\t\t\t}\n\t\t\treturn position.addOffset(pos, 0, 60);\n\t\t};\n\n\t\tif (!this.dialogConfig.menuLabel) {\n\t\t\tthis.dialogConfig.menuLabel = this.i18n.get().OVERFLOW_MENU.OVERFLOW;\n\t\t}\n\t}\n\n\t@HostListener(\"keydown\", [\"$event\"])\n\thostkeys(event: KeyboardEvent) {\n\t\tconst listItems = this.listItems();\n\n\t\tswitch (event.key) {\n\t\t\tcase \"Down\": // IE specific value\n\t\t\tcase \"ArrowDown\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (!isFocusInLastItem(event, listItems))  {\n\t\t\t\t\tconst index = listItems.findIndex(item => item === event.target);\n\t\t\t\t\tlistItems[index + 1].focus();\n\t\t\t\t} else {\n\t\t\t\t\tlistItems[0].focus();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"Up\": // IE specific value\n\t\t\tcase \"ArrowUp\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (!isFocusInFirstItem(event, listItems))  {\n\t\t\t\t\tconst index = listItems.findIndex(item => item === event.target);\n\t\t\t\t\tlistItems[index - 1].focus();\n\t\t\t\t} else {\n\t\t\t\t\tlistItems[listItems.length - 1].focus();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"Home\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tlistItems[0].focus();\n\t\t\t\tbreak;\n\n\t\t\tcase \"End\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tlistItems[listItems.length - 1].focus();\n\t\t\t\tbreak;\n\n\t\t\tcase \"Esc\": // IE specific value\n\t\t\tcase \"Escape\":\n\t\t\tcase \"Tab\":\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\tthis.doClose();\n\t\t\t\tbreak;\n\t\t\tdefault: break;\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\t// wait for the menu to exist in the DOM before setting focus\n\t\t// TODO: work on a more elegant solution (afterDialogInit hook maybe?)\n\t\tsetTimeout(() => {\n\t\t\tconst focusElementList = this.listItems();\n\t\t\tfocusElementList.forEach(button => {\n\t\t\t\t// Allows user to set tabindex to 0.\n\t\t\t\tif (button.getAttribute(\"tabindex\") === null) {\n\t\t\t\t\tbutton.tabIndex = -1;\n\t\t\t\t}\n\t\t\t});\n\t\t\tfocusElementList[0].tabIndex = 0;\n\t\t\tfocusElementList[0].focus();\n\t\t});\n\t\tsuper.ngAfterViewInit();\n\t}\n\n\tprotected listItems() {\n\t\treturn Array.from<any>(this.elementRef.nativeElement.querySelectorAll(\".bx--overflow-menu-options__btn:not([disabled])\"));\n\t}\n}\n"]}