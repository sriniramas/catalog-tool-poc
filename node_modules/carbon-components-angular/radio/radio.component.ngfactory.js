/*!
 *
 * carbon-angular v0.0.0 | radio.component.ngfactory.js
 *
 * Copyright 2014, 2018 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "./radio.component";
import * as i3 from "./radio-group.component";
var styles_Radio = [];
var RenderType_Radio = i0.ɵcrt({ encapsulation: 2, styles: styles_Radio, data: {} });
export { RenderType_Radio as RenderType_Radio };
export function View_Radio_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { inputCheckbox: 0 }), (_l()(), i0.ɵeld(1, 0, [[1, 0], ["inputCheckbox", 1]], null, 0, "input", [["class", "bx--radio-button"], ["type", "radio"]], [[8, "checked", 0], [8, "disabled", 0], [8, "name", 0], [8, "id", 0], [8, "required", 0], [8, "value", 0], [1, "aria-label", 0], [1, "aria-labelledby", 0], [8, "tabIndex", 0]], [[null, "change"], [null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("change" === en)) {
        var pd_0 = (_co.onChange($event) !== false);
        ad = (pd_0 && ad);
    } if (("click" === en)) {
        var pd_1 = (_co.onClick($event) !== false);
        ad = (pd_1 && ad);
    } return ad; }, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 2, "label", [["class", "bx--radio-button__label"]], [[8, "htmlFor", 0]], null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 0, "span", [["class", "bx--radio-button__appearance"]], null, null, null, null, null)), i0.ɵncd(null, 0)], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.checked; var currVal_1 = _co.disabled; var currVal_2 = _co.name; var currVal_3 = _co.id; var currVal_4 = _co.required; var currVal_5 = _co.value; var currVal_6 = _co.ariaLabel; var currVal_7 = _co.ariaLabelledby; var currVal_8 = ((_co.checked || _co.needsToBeFocusable) ? 0 : (0 - 1)); _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8); var currVal_9 = _co.id; _ck(_v, 2, 0, currVal_9); }); }
export function View_Radio_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, "ibm-radio", [], [[1, "class", 0], [1, "role", 0]], null, null, View_Radio_0, RenderType_Radio)), i0.ɵprd(5120, null, i1.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i2.Radio]), i0.ɵdid(2, 4308992, null, 0, i2.Radio, [[2, i3.RadioGroup], i0.ChangeDetectorRef, i0.ElementRef, i0.Renderer2], null, null)], function (_ck, _v) { _ck(_v, 2, 0); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 2).class; var currVal_1 = i0.ɵnov(_v, 2).role; _ck(_v, 0, 0, currVal_0, currVal_1); }); }
var RadioNgFactory = i0.ɵccf("ibm-radio", i2.Radio, View_Radio_Host_0, { size: "size", inline: "inline", nested: "nested", disabled: "disabled", name: "name", id: "id", required: "required", value: "value", ariaLabel: "aria-label", ariaLabelledby: "aria-labelledby", indeterminate: "indeterminate", checked: "checked" }, { change: "change", indeterminateChange: "indeterminateChange" }, ["*"]);
export { RadioNgFactory as RadioNgFactory };
//# sourceMappingURL=radio.component.ngfactory.js.map