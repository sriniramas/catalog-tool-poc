{"version":3,"file":"button.directive.js","sourceRoot":"","sources":["../src/button/button.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EACN,SAAS,EACT,WAAW,EACX,KAAK,EAEL,MAAM,eAAe,CAAC;AAEvB;;;;;;;;;;;GAWG;AACH;IAAA;QAIC;;WAEG;QACM,cAAS,GAAkF,SAAS,CAAC;QAC9G;;WAEG;QACM,SAAI,GAAoB,QAAQ,CAAC;QAC1C,0FAA0F;QAC5D,cAAS,GAAG,IAAI,CAAC;QACR,YAAO,GAAG,IAAI,CAAC;QACb,cAAS,GAAG,KAAK,CAAC;QACnB,aAAQ,GAAG,KAAK,CAAC;QACpB,UAAK,GAAG,KAAK,CAAC;QACb,WAAM,GAAG,KAAK,CAAC;QACN,kBAAa,GAAG,KAAK,CAAC;QACnC,cAAS,GAAG,KAAK,CAAC;IAiBrD,CAAC;IAfA,yBAAQ,GAAR;QACC,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACtB;QACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,QAAQ,IAAI,CAAC,SAAS,EAAE;YACvB,KAAK,SAAS;gBAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBAAC,MAAM;YAC3C,KAAK,WAAW;gBAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBAAC,MAAM;YAC/C,KAAK,UAAU;gBAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAAC,MAAM;YAC7C,KAAK,OAAO;gBAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAAC,MAAM;YACvC,KAAK,QAAQ;gBAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBAAC,MAAM;YACzC,KAAK,iBAAiB;gBAAE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAAC,MAAM;YACzD;gBAAS,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBAAC,MAAM;SACpC;IACF,CAAC;;gBApCD,SAAS,SAAC;oBACV,QAAQ,EAAE,aAAa;iBACvB;;;4BAKC,KAAK;uBAIL,KAAK;4BAEL,WAAW,SAAC,eAAe;0BAC3B,WAAW,SAAC,wBAAwB;4BACpC,WAAW,SAAC,0BAA0B;2BACtC,WAAW,SAAC,yBAAyB;wBACrC,WAAW,SAAC,sBAAsB;yBAClC,WAAW,SAAC,uBAAuB;gCACnC,WAAW,SAAC,gCAAgC;4BAC5C,WAAW,SAAC,mBAAmB;;IAiBjC,aAAC;CAAA,AArCD,IAqCC;SAlCY,MAAM","sourcesContent":["import {\n\tDirective,\n\tHostBinding,\n\tInput,\n\tOnInit\n} from \"@angular/core\";\n\n/**\n * A convinence directive for applying styling to a button.\n *\n * Example:\n *\n * ```hmtl\n * <button ibmButton>A button</button>\n * <button ibmButton=\"secondary\">A secondary button</button>\n * ```\n *\n * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/button/code) for more detail.\n */\n@Directive({\n\tselector: \"[ibmButton]\"\n})\nexport class Button implements OnInit {\n\t/**\n\t * sets the button type\n\t */\n\t@Input() ibmButton: \"primary\" | \"secondary\" | \"tertiary\" | \"ghost\" | \"danger\" | \"danger--primary\" = \"primary\";\n\t/**\n\t * Specify the size of the button\n\t */\n\t@Input() size: \"normal\" | \"sm\" = \"normal\";\n\t// a whole lot of HostBindings ... this way we don't have to touch the elementRef directly\n\t@HostBinding(\"class.bx--btn\") baseClass = true;\n\t@HostBinding(\"class.bx--btn--primary\") primary = true;\n\t@HostBinding(\"class.bx--btn--secondary\") secondary = false;\n\t@HostBinding(\"class.bx--btn--tertiary\") tertiary = false;\n\t@HostBinding(\"class.bx--btn--ghost\") ghost = false;\n\t@HostBinding(\"class.bx--btn--danger\") danger = false;\n\t@HostBinding(\"class.bx--btn--danger--primary\") dangerPrimary = false;\n\t@HostBinding(\"class.bx--btn--sm\") smallSize = false;\n\n\tngOnInit() {\n\t\tif (this.size === \"sm\") {\n\t\t\tthis.smallSize = true;\n\t\t}\n\t\tthis.primary = false;\n\t\tswitch (this.ibmButton) {\n\t\t\tcase \"primary\": this.primary = true; break;\n\t\t\tcase \"secondary\": this.secondary = true; break;\n\t\t\tcase \"tertiary\": this.tertiary = true; break;\n\t\t\tcase \"ghost\": this.ghost = true; break;\n\t\t\tcase \"danger\": this.danger = true; break;\n\t\t\tcase \"danger--primary\": this.dangerPrimary = true; break;\n\t\t\tdefault: this.primary = true; break;\n\t\t}\n\t}\n}\n"]}