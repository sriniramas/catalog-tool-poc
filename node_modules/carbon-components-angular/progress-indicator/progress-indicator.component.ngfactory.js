/*!
 *
 * carbon-angular v0.0.0 | progress-indicator.component.ngfactory.js
 *
 * Copyright 2014, 2018 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./progress-indicator.component";
var styles_ProgressIndicator = [];
var RenderType_ProgressIndicator = i0.ɵcrt({ encapsulation: 2, styles: styles_ProgressIndicator, data: {} });
export { RenderType_ProgressIndicator as RenderType_ProgressIndicator };
function View_ProgressIndicator_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, ":svg:svg", [["height", "16"], ["viewBox", "0 0 16 16"], ["width", "16"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 2, ":svg:g", [["fill-rule", "nonzero"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 0, ":svg:path", [["d", "M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16z"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 0, ":svg:path", [["d", "M11.646 5.146l.708.708-5.604 5.603-3.104-3.103.708-.708 2.396 2.397z"]], null, null, null, null, null))], null, null); }
function View_ProgressIndicator_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, ":svg:svg", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 0, ":svg:circle", [["cx", "12"], ["cy", "12"], ["r", "12"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 0, ":svg:circle", [["cx", "12"], ["cy", "12"], ["r", "6"]], null, null, null, null, null))], null, null); }
function View_ProgressIndicator_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, ":svg:svg", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 0, ":svg:circle", [["cx", "12"], ["cy", "12"], ["r", "12"]], null, null, null, null, null))], null, null); }
function View_ProgressIndicator_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 9, "li", [], [[8, "className", 0]], null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_ProgressIndicator_2)), i0.ɵdid(2, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_ProgressIndicator_3)), i0.ɵdid(4, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_ProgressIndicator_4)), i0.ɵdid(6, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵeld(7, 0, null, null, 1, "p", [["class", "bx--progress-label"]], null, null, null, null, null)), (_l()(), i0.ɵted(8, null, ["", ""])), (_l()(), i0.ɵeld(9, 0, null, null, 0, "span", [["class", "bx--progress-line"]], null, null, null, null, null))], function (_ck, _v) { var currVal_1 = (_v.context.$implicit.state == "complete"); _ck(_v, 2, 0, currVal_1); var currVal_2 = (_v.context.$implicit.state == "current"); _ck(_v, 4, 0, currVal_2); var currVal_3 = (_v.context.$implicit.state == "incomplete"); _ck(_v, 6, 0, currVal_3); }, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(1, "bx--progress-step bx--progress-step--", _v.context.$implicit.state, ""); _ck(_v, 0, 0, currVal_0); var currVal_4 = _v.context.$implicit.text; _ck(_v, 8, 0, currVal_4); }); }
export function View_ProgressIndicator_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, "ul", [["class", "bx--progress"], ["data-progress", ""], ["data-progress-current", ""]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_ProgressIndicator_1)), i0.ɵdid(2, 278528, null, 0, i1.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, "ngForOf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.steps; _ck(_v, 2, 0, currVal_0); }, null); }
export function View_ProgressIndicator_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "ibm-progress-indicator", [], null, null, null, View_ProgressIndicator_0, RenderType_ProgressIndicator)), i0.ɵdid(1, 49152, null, 0, i2.ProgressIndicator, [], null, null)], null, null); }
var ProgressIndicatorNgFactory = i0.ɵccf("ibm-progress-indicator", i2.ProgressIndicator, View_ProgressIndicator_Host_0, { steps: "steps" }, {}, []);
export { ProgressIndicatorNgFactory as ProgressIndicatorNgFactory };
//# sourceMappingURL=progress-indicator.component.ngfactory.js.map