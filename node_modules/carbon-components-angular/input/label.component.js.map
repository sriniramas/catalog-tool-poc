{"version":3,"file":"label.component.js","sourceRoot":"","sources":["../src/input/label.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACN,SAAS,EACT,KAAK,EAEL,UAAU,EACV,WAAW,EACX,MAAM,eAAe,CAAC;AAEvB;;;;;;;;;;;;;;;;;;;;;GAqBG;AACH;IA8BC;;;;OAIG;IACH,eAAsB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QArB5C;;;;WAIG;QACH,iBAAY,GAAG,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;QAEjD;;;;WAIG;QACM,eAAU,GAAyC,EAAE,CAAC;QAE3B,eAAU,GAAG,IAAI,CAAC;QAQrD,KAAK,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED;;;OAGG;IACH,kCAAkB,GAAlB;QACC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACzG,CAAC;IArCD;;;;OAIG;IACI,kBAAY,GAAG,CAAC,CAAC;;gBAbxB,SAAS,SAAC;oBACV,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE,4JAGT;iBACD;;;;gBAhCA,UAAU;;;6BAoDT,KAAK;6BAEL,WAAW,SAAC,qBAAqB;;IAkBnC,YAAC;CAAA,AA9CD,IA8CC;SAvCY,KAAK","sourcesContent":["import {\n\tComponent,\n\tInput,\n\tAfterContentInit,\n\tElementRef,\n\tHostBinding\n} from \"@angular/core\";\n\n/**\n * ```html\n * <ibm-label labelState=\"success\">\n * \t<label label>Field with success</label>\n * \t<input type=\"text\" class=\"input-field\">\n * </ibm-label>\n *\n * <ibm-label labelState=\"warning\">\n * \t<label label>Field with warning</label>\n * \t<input type=\"text\" class=\"input-field\">\n * </ibm-label>\n *\n * <ibm-label labelState=\"error\">\n * \t<label label>Field with error</label>\n * \t<input type=\"text\" class=\"input-field\">\n * </ibm-label>\n * ```\n *\n * @export\n * @class Label\n * @implements {AfterContentInit}\n */\n@Component({\n\tselector: \"ibm-label\",\n\ttemplate: `\n\t\t<label [for]=\"labelInputID\" class=\"bx--label\"><ng-content></ng-content></label>\n\t\t<ng-content select=\"input,textarea,div\"></ng-content>\n\t`\n})\nexport class Label implements AfterContentInit {\n\t/**\n\t * Used to build the id of the input item associated with the `Label`.\n\t * @static\n\t * @memberof Label\n\t */\n\tstatic labelCounter = 0;\n\t/**\n\t * The id of the input item associated with the `Label`. This value is also used to associate the `Label` with\n\t * its input counterpart through the 'for' attribute.\n\t * @memberof Label\n\t */\n\tlabelInputID = \"ibm-label-\" + Label.labelCounter;\n\n\t/**\n\t * State of the `Label` will determine the styles applied.\n\t * @type {(\"success\" | \"warning\" | \"error\" | \"\")}\n\t * @memberof Label\n\t */\n\t@Input() labelState: \"success\" | \"warning\" | \"error\" | \"\" = \"\";\n\n\t@HostBinding(\"class.bx--form-item\") labelClass = true;\n\n\t/**\n\t * Creates an instance of Label.\n\t * @param {ElementRef} elementRef\n\t * @memberof Label\n\t */\n\tconstructor(protected elementRef: ElementRef) {\n\t\tLabel.labelCounter++;\n\t}\n\n\t/**\n\t * Sets the id on the input item associated with the `Label`.\n\t * @memberof Label\n\t */\n\tngAfterContentInit() {\n\t\tthis.elementRef.nativeElement.querySelector(\"input,textarea,div\").setAttribute(\"id\", this.labelInputID);\n\t}\n}\n"]}