{"version":3,"file":"calendar-month.component.js","sourceRoot":"","sources":["../../src/calendar/month-view/calendar-month.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tComponent,\n\tInput,\n\tOnInit\n} from \"@angular/core\";\nimport { DateTimeModel } from \"./../date-time-model.class\";\nimport { range } from \"../../common/utils\";\n\n@Component({\n\tselector: \"ibm-calendar-month-view\",\n\ttemplate: `\n\t<div class=\"calendar-view\">\n\t\t<ibm-calendar-header [currentView]=\"currentView\" [monthCount]=\"monthCount\"></ibm-calendar-header>\n\t\t<div class=\"calendar_month-container\"\n\t\t*ngFor=\"let month of range(monthCount)\">\n\t\t\t<table class=\"calendar_grid calendar_month\">\n\t\t\t\t<tr class=\"grid_row_header--month\">\n\t\t\t\t\t<th *ngFor=\"let day of model.daysOfWeek\"><div>{{day}}</div></th>\n\t\t\t\t</tr>\n\t\t\t\t<tr\n\t\t\t\tclass=\"grid_row--month\"\n\t\t\t\t*ngFor=\"let week of daysOfMonth(month)\">\n\t\t\t\t<td\n\t\t\t\t\t*ngFor=\"let day of week\"\n\t\t\t\t\t(click)=\"selectDay(day, month)\"\n\t\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t\t'today': isCurrentDay(day, month),\n\t\t\t\t\t\t'empty': !day,\n\t\t\t\t\t\t'selected': isSelected(model.startDate, month) && day == model.startDate.getDate()\n\t\t\t\t\t\t\t|| isSelected(model.endDate, month) && day == model.endDate.getDate(),\n\t\t\t\t\t\t'range': inRange(day, month),\n\t\t\t\t\t\t'disabled': isDisabled(day, month)\n\t\t\t\t\t}\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{{day}}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n\t`\n})\nexport class CalendarMonth implements OnInit {\n\t/**\n\t * `DateTimeModel` to be used in this view.\n\t *\n\t * @type {DateTimeModel}\n\t * @memberof CalendarMonth\n\t */\n\t@Input() model: DateTimeModel;\n\n\t/**\n\t * Number of months to display in this view.\n\t *\n\t * @memberof CalendarMonth\n\t */\n\t@Input() monthCount = 1;\n\n\t/**\n\t * `Date` being used in this view.\n\t *\n\t * @type {Date}\n\t * @memberof CalendarMonth\n\t */\n\tcurrentView: Date = new Date();\n\n\t/**\n\t * State to determine whether you are selecting `startDate` or `endDate`\n\t *\n\t * @memberof CalendarMonth\n\t */\n\trangeSelectionInProgress = false;\n\n\tngOnInit() {\n\t\tthis.currentView = new Date(this.model.startDate);\n\n\t\tif (!this.currentView || isNaN(this.currentView.getTime())) {\n\t\t\tthis.currentView = new Date();\n\t\t}\n\t}\n\n\t/**\n\t * Wrapper for `range` function in utils because it cannot\n\t * be directly used in template\n\t *\n\t * @param {number} stop\n\t * @param {number} [start=0]\n\t * @param {number} [step=1]\n\t * @returns Array<any>\n\t * @memberof CalendarMonth\n\t */\n\trange(stop: number, start = 0, step = 1) {\n\t\treturn range(stop, start, step);\n\t}\n\n\t/**\n\t * Returns value indicating whether `day` is current day\n\t *\n\t * @param {number} day day of month\n\t * @param {number} [position=0] index of month in view\n\t * @returns boolean\n\t * @memberof CalendarMonth\n\t */\n\tisCurrentDay(day: number, position = 0) {\n\t\tconst now = new Date();\n\n\t\treturn (\n\t\t\tthis.currentView.getFullYear() === now.getFullYear() &&\n\t\t\tthis.currentView.getMonth() + position === now.getMonth() &&\n\t\t\tday === now.getDate()\n\t\t);\n\t}\n\n\t/**\n\t * Convenience method to figure out if `day` is disabled\n\t *\n\t * @param {number} day day of month\n\t * @param {number} [position=0] index of month in view\n\t * @returns boolean\n\t * @memberof CalendarMonth\n\t */\n\tisDisabled(day: number, position = 0) {\n\t\treturn this.model.isDateDisabled(new Date(this.currentView.getFullYear(), this.currentView.getMonth() + position, day));\n\t}\n\n\t/**\n\t * Convenience method to figure out if days of the month in view\n\t *\n\t * @param {number} [position=0] index of month in view\n\t * @returns boolean\n\t * @memberof CalendarMonth\n\t */\n\tdaysOfMonth(position = 0) {\n\t\treturn this.model.daysOfMonth(new Date(this.currentView.getFullYear(), this.currentView.getMonth() + position, 1));\n\t}\n\n\t/**\n\t * Convenience method to figure out if `day` is part of a range selection\n\t *\n\t * @param {number} day day of month\n\t * @param {number} [position=0] index of month in view\n\t * @returns boolean\n\t * @memberof CalendarMonth\n\t */\n\tinRange(day: number, position = 0) {\n\t\tif (!day) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.model.isDateInRange(new Date(this.currentView.getFullYear(), this.currentView.getMonth() + position, day));\n\t}\n\n\t/**\n\t * Returns value indicating whether `day` is selected\n\t *\n\t * @param {number} day day of month\n\t * @param {number} [position=0] index of month in view\n\t * @returns boolean\n\t * @memberof CalendarMonth\n\t */\n\tisSelected(date: Date, position = 0) {\n\t\tif (!date) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst currentMonthInView = (this.currentView.getMonth() + position) % 12;\n\t\tlet currentYearInView = this.currentView.getFullYear();\n\n\t\tif (this.currentView.getMonth() + position === 12) {\n\t\t\tcurrentYearInView += 1;\n\t\t}\n\n\t\treturn currentMonthInView === date.getMonth() &&\n\t\t\tcurrentYearInView === date.getFullYear();\n\t}\n\n\t/**\n\t *\tSets model's `startDate` and `endDate`\n\t *\n\t * @param {number} day day of month\n\t * @param {number} [position=0] index of month in view\n\t * @memberof CalendarMonth\n\t */\n\tselectDay(day: number, position = 0) {\n\t\tif (this.isDisabled(day, position)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentMonthInView = (this.currentView.getMonth() + position) % 12;\n\t\tlet currentYearInView = this.currentView.getFullYear();\n\n\t\tif (this.currentView.getMonth() + position === 12) {\n\t\t\tcurrentYearInView += 1;\n\t\t}\n\n\t\tif (this.rangeSelectionInProgress) {\n\t\t\tthis.rangeSelectionInProgress = false;\n\t\t\tthis.model.endDate = DateTimeModel.dayEnd(new Date(currentYearInView, currentMonthInView, day));\n\n\t\t\tif (this.model.startDate.getTime() > this.model.endDate.getTime()) {\n\t\t\t\tconst tmp = this.model.startDate;\n\t\t\t\tthis.model.startDate = this.model.endDate;\n\t\t\t\tthis.model.endDate = tmp;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.rangeSelectionInProgress = true;\n\t\t\tthis.model.selectDay(new Date(currentYearInView, currentMonthInView, day));\n\t\t}\n\t}\n}\n"]}