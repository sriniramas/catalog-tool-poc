{"version":3,"file":"calendar-months.component.js","sourceRoot":"","sources":["../../src/calendar/months-view/calendar-months.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tComponent,\n\tInput,\n\tOnInit\n} from \"@angular/core\";\nimport { DateTimeModel } from \"./../date-time-model.class\";\nimport { range } from \"../../common/utils\";\n\n@Component({\n\tselector: \"ibm-calendar-months-view\",\n\ttemplate: `\n\t<div class=\"calendar-view\">\n\t\t<ibm-calendar-header [currentView]=\"currentView\" header=\"yearOnly\"></ibm-calendar-header>\n\t\t<table class=\"calendar_grid\">\n\t\t\t<tr\n\t\t\tclass=\"grid_row--months\"\n\t\t\t*ngFor=\"let i of range(3)\">\n\t\t\t\t<td\n\t\t\t\t*ngFor=\"let j of range(4)\"\n\t\t\t\t(click)=\"selectMonth(i * 4 + j)\"\n\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t'today': isCurrentMonth(i * 4 + j),\n\t\t\t\t\t'selected': isSelected(i * 4 + j),\n\t\t\t\t\t'range': inRange(i * 4 + j),\n\t\t\t\t\t'disabled': isDisabled(i * 4 + j)\n\t\t\t\t}\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{{months[i * 4 + j]}}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t</div>\n\t`\n})\nexport class CalendarMonths implements OnInit {\n\n\t/**\n\t * `DateTimeModel` to be used in this view.\n\t *\n\t * @type {DateTimeModel}\n\t * @memberof CalendarMonths\n\t */\n\t@Input() model: DateTimeModel;\n\n\t/**\n\t * `Date` being used in this view.\n\t *\n\t * @type {Date}\n\t * @memberof CalendarMonths\n\t */\n\tcurrentView: Date = new Date();\n\n\t/**\n\t * State to determine whether you are selecting `startDate` or `endDate`\n\t *\n\t * @memberof CalendarMonths\n\t */\n\trangeSelectionInProgress = false;\n\n\t/**\n\t * Reference to month translation keys in `DateTimeModel`\n\t *\n\t * @memberof CalendarMonths\n\t */\n\tmonths = DateTimeModel.monthsTranslateKeys;\n\n\tngOnInit() {\n\t\tthis.currentView = new Date(this.model.startDate);\n\n\t\tif (!this.currentView || isNaN(this.currentView.getTime())) {\n\t\t\tthis.currentView = new Date();\n\t\t}\n\t}\n\n\t/**\n\t * Wrapper for `range` function in utils because it cannot\n\t * be directly used in template\n\t *\n\t * @param {number} stop\n\t * @param {number} [start=0]\n\t * @param {number} [step=1]\n\t * @returns Array<any>\n\t * @memberof CalendarMonths\n\t */\n\trange(stop: number, start = 0, step = 1) {\n\t\treturn range(stop, start, step);\n\t}\n\n\t/**\n\t * Returns value indicating whether `month` is current month\n\t *\n\t * @param {number} month in year\n\t * @returns boolean\n\t * @memberof CalendarMonths\n\t */\n\tisCurrentMonth(month: number) {\n\t\tconst now = new Date();\n\n\t\treturn (\n\t\t\tthis.currentView.getFullYear() === now.getFullYear() &&\n\t\t\tmonth === now.getMonth()\n\t\t);\n\t}\n\n\t/**\n\t * Returns value indicating whether `month` is disabled\n\t *\n\t * @param {number} month in year\n\t * @returns boolean\n\t * @memberof CalendarMonths\n\t */\n\tisDisabled(month: number) {\n\t\treturn this.model.isDateDisabled(new Date(this.currentView.getFullYear(), month, 1));\n\t}\n\n\t/**\n\t * Returns value indicating whether `month` is part of a range selection\n\t *\n\t * @param {number} month in year\n\t * @returns boolean\n\t * @memberof CalendarMonths\n\t */\n\tinRange(month: number) {\n\t\treturn this.model.isDateInRange(new Date(this.currentView.getFullYear(), month, 1));\n\t}\n\n\t/**\n\t * Returns value indicating whether `month` is selected\n\t *\n\t * @param {number} month in year\n\t * @memberof CalendarMonths\n\t */\n\tisSelected(month: number) {\n\t\treturn this.currentView.getFullYear() === this.model.startDate.getFullYear() && month === this.model.startDate.getMonth()\n\t\t\t|| this.currentView.getFullYear() === this.model.endDate.getFullYear() && month === this.model.endDate.getMonth();\n\t}\n\n\t/**\n\t * Sets model's `startDate` and `endDate`\n\t *\n\t * @param {number} month in year\n\t * @memberof CalendarMonths\n\t */\n\tselectMonth(month: number) {\n\t\tif (this.isDisabled(month)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.rangeSelectionInProgress) {\n\t\t\tthis.rangeSelectionInProgress = false;\n\t\t\tthis.model.selectMonthEnd(new Date(this.currentView.getFullYear(), month));\n\t\t\tif (this.model.startDate.getTime() > this.model.endDate.getTime()) {\n\t\t\t\tconst tmp = this.model.startDate;\n\t\t\t\tthis.model.startDate = this.model.endDate;\n\t\t\t\tthis.model.endDate = tmp;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.rangeSelectionInProgress = true;\n\t\t\tthis.model.selectMonth(new Date(this.currentView.getFullYear(), month, 1));\n\t\t}\n\t}\n}\n"]}