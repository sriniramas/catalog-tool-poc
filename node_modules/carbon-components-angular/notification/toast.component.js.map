{"version":3,"file":"toast.component.js","sourceRoot":"","sources":["../src/notification/toast.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EACN,SAAS,EACT,KAAK,EAEL,WAAW,EACX,MAAM,eAAe,CAAC;AAGvB,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAExD;;;;;GAKG;AACH;IAwB2B,yBAAY;IAxBvC;QAAA,qEAiDC;QAdwB,aAAO,GAAG,cAAc,CAAC;QACJ,gBAAU,GAAG,IAAI,CAAC;QACrC,UAAI,GAAG,OAAO,CAAC;;IAY1C,CAAC;IAVA,sBAAwD,0BAAO;aAA/D,cAAoE,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC;;;OAAA;IACtH,sBAAuD,yBAAM;aAA7D,cAAkE,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;;;OAAA;IACnH,sBAA0D,4BAAS;aAAnE,cAAwE,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;;;OAAA;IAC5H,sBAA0D,4BAAS;aAAnE,cAAwE,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;;;OAAA;IAE5H,wBAAQ,GAAR;QACC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE;YACrC,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC;SAC5E;IACF,CAAC;;gBAhDD,SAAS,SAAC;oBACV,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE,23BAoBT;iBACD;;;kCAUC,KAAK;0BAEL,WAAW,SAAC,SAAS;6BACrB,WAAW,SAAC,8BAA8B;uBAC1C,WAAW,SAAC,WAAW;0BAEvB,WAAW,SAAC,qCAAqC;yBACjD,WAAW,SAAC,oCAAoC;4BAChD,WAAW,SAAC,uCAAuC;4BACnD,WAAW,SAAC,uCAAuC;;IAOrD,YAAC;CAAA,AAjDD,CAwB2B,YAAY,GAyBtC;SAzBY,KAAK","sourcesContent":["import {\n\tComponent,\n\tInput,\n\tOnInit,\n\tHostBinding\n} from \"@angular/core\";\n\nimport { NotificationContent, ToastContent } from \"./notification-content.interface\";\nimport { Notification } from \"./notification.component\";\n\n/**\n * Notification messages are displayed toward the top of the UI and do not interrupt userâ€™s work.\n *\n * @export\n * @class Notification\n */\n@Component({\n\tselector: \"ibm-toast\",\n\ttemplate: `\n\t\t<div class=\"bx--toast-notification__details\">\n\t\t\t<h3 class=\"bx--toast-notification__title\" [innerHTML]=\"notificationObj.title\"></h3>\n\t\t\t<p class=\"bx--toast-notification__subtitle\" [innerHTML]=\"notificationObj.subtitle\"></p>\n\t\t\t<p class=\"bx--toast-notification__caption\" [innerHTML]=\"notificationObj.caption\"></p>\n\t\t</div>\n\t\t<button\n\t\t\tclass=\"bx--toast-notification__close-button\"\n\t\t\ttype=\"button\"\n\t\t\t[attr.aria-label]=\"notificationObj.closeLabel\"\n\t\t\t(click)=\"onClose()\">\n\t\t\t<svg\n\t\t\t\tclass=\"bx--toast-notification-icon\"\n\t\t\t\twidth=\"10\"\n\t\t\t\theight=\"10\"\n\t\t\t\tviewBox=\"0 0 10 10\"\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<path d=\"M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z\" fill-rule=\"nonzero\"/>\n\t\t\t</svg>\n\t\t</button>\n\t`\n})\nexport class Toast extends Notification implements OnInit {\n\t/**\n\t * Can have `type`, `title`, `subtitle`, and `caption` members.\n\t *\n\t * `type` can be one of `\"info\"`, `\"warning\"`, `\"danger\"`, `\"success\"`\n\t *\n\t * `message` is message for notification to display\n\t *\n\t */\n\t@Input() notificationObj: ToastContent;\n\n\t@HostBinding(\"attr.id\") toastID = \"notification\";\n\t@HostBinding(\"class.bx--toast-notification\") toastClass = true;\n\t@HostBinding(\"attr.role\") role = \"alert\";\n\n\t@HostBinding(\"class.bx--toast-notification--error\") get isError() { return this.notificationObj[\"type\"] === \"error\"; }\n\t@HostBinding(\"class.bx--toast-notification--info\") get isInfo() { return this.notificationObj[\"type\"] === \"info\"; }\n\t@HostBinding(\"class.bx--toast-notification--success\") get isSuccess() { return this.notificationObj[\"type\"] === \"success\"; }\n\t@HostBinding(\"class.bx--toast-notification--warning\") get isWarning() { return this.notificationObj[\"type\"] === \"warning\"; }\n\n\tngOnInit() {\n\t\tif (!this.notificationObj.closeLabel) {\n\t\t\tthis.notificationObj.closeLabel = this.i18n.get().NOTIFICATION.CLOSE_BUTTON;\n\t\t}\n\t}\n}\n"]}